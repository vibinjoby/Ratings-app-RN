// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ModalPopup should render 1`] = `
<Modal
  animationType="none"
  deviceHeight={null}
  deviceWidth={null}
  hardwareAccelerated={false}
  hideModalContentWhileAnimating={false}
  onBackdropPress={[MockFunction]}
  onModalHide={[Function]}
  onModalWillHide={[Function]}
  onModalWillShow={[Function]}
  onRequestClose={[Function]}
  panResponderThreshold={4}
  scrollHorizontal={false}
  scrollOffset={0}
  scrollOffsetMax={0}
  scrollTo={null}
  statusBarTranslucent={false}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  swipeThreshold={100}
  transparent={true}
  visible={false}
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    forwardedRef={[Function]}
    nativeID="animatedComponent"
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "black",
        "bottom": 0,
        "height": 1334,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 750,
      }
    }
  />
  <View
    collapsable={false}
    deviceHeight={null}
    deviceWidth={null}
    forwardedRef={[Function]}
    hideModalContentWhileAnimating={false}
    nativeID="animatedComponent"
    onBackdropPress={[MockFunction]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    panResponderThreshold={4}
    pointerEvents="box-none"
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={false}
    style={
      Object {
        "flex": 1,
        "justifyContent": "center",
        "margin": 37.5,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
      }
    }
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
  >
    <View
      style={
        Object {
          "backgroundColor": "#fff",
          "borderRadius": 10,
          "padding": 15,
        }
      }
      testID="container"
    >
      <Text
        style={
          Object {
            "fontFamily": "Poppins-Regular",
            "fontSize": 20,
            "textAlign": "center",
          }
        }
      >
        Are you sure you want to delete this user
      </Text>
      <View
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "space-around",
            "marginTop": 25,
          }
        }
        testID="btnWrapper"
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          nativeID="animatedComponent"
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#E2E2E2",
              "borderRadius": 5,
              "minWidth": 115,
              "opacity": 1,
              "padding": 14,
            }
          }
          testID="negativeBtn"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#fff",
                  "fontFamily": "Poppins-Regular",
                  "fontSize": 18,
                },
                Object {
                  "color": "#181725",
                },
              ]
            }
          >
            No
          </Text>
        </View>
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          nativeID="animatedComponent"
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#FF5823",
              "borderRadius": 5,
              "minWidth": 115,
              "opacity": 1,
              "padding": 14,
            }
          }
          testID="positiveBtn"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#fff",
                  "fontFamily": "Poppins-Regular",
                  "fontSize": 18,
                },
                Object {},
              ]
            }
          >
            Yes
          </Text>
        </View>
      </View>
    </View>
  </View>
</Modal>
`;
