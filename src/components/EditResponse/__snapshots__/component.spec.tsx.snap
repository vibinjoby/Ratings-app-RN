// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditResponse should render 1`] = `
<RCTScrollView
  contentInset={
    Object {
      "bottom": 0,
    }
  }
  getTextInputRefs={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onScroll={[Function]}
  scrollEventThrottle={200}
  scrollToBottomOnKBShow={false}
  scrollToInputAdditionalOffset={75}
  startScrolledToBottom={false}
>
  <View>
    <Modal
      animationType="none"
      deviceHeight={null}
      deviceWidth={null}
      hardwareAccelerated={false}
      hideModalContentWhileAnimating={false}
      onBackdropPress={[MockFunction]}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      onRequestClose={[Function]}
      panResponderThreshold={4}
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      statusBarTranslucent={false}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
      transparent={true}
      visible={true}
    >
      <View
        accessible={true}
        focusable={true}
        forwardedRef={[Function]}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "height": 1334,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": 750,
          }
        }
      />
      <View
        deviceHeight={null}
        deviceWidth={null}
        forwardedRef={[Function]}
        hideModalContentWhileAnimating={false}
        onBackdropPress={[MockFunction]}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        panResponderThreshold={4}
        pointerEvents="box-none"
        scrollHorizontal={false}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        statusBarTranslucent={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "margin": 37.5,
            "transform": Array [
              Object {
                "translateY": 1334,
              },
            ],
          }
        }
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
      >
        <View
          style={
            Object {
              "backgroundColor": "#fff",
              "borderRadius": 8,
              "padding": 15,
            }
          }
        >
          <Text
            style={
              Object {
                "fontFamily": "Poppins-Bold",
                "fontSize": 20,
                "marginBottom": 5,
              }
            }
          >
            Customer Review
          </Text>
          <TextInput
            autoFocus={true}
            blurOnSubmit={true}
            multiline={true}
            onChangeText={[Function]}
            placeholder="Enter Customer response"
            style={
              Object {
                "backgroundColor": "#E2E2E2",
                "marginBottom": 10,
                "padding": 10,
              }
            }
            testID="customerRespId"
            value="Lorem ipsium"
          />
          <Text
            style={
              Object {
                "fontFamily": "Poppins-Bold",
                "fontSize": 20,
                "marginBottom": 5,
              }
            }
          >
            Ratings
          </Text>
          <View
            style={
              Object {
                "marginBottom": 10,
              }
            }
          >
            <RCTScrollView
              ItemSeparatorComponent={[Function]}
              data={
                Array [
                  1,
                  2,
                  3,
                  4,
                  5,
                ]
              }
              getItem={[Function]}
              getItemCount={[Function]}
              horizontal={true}
              keyExtractor={[Function]}
              onContentSizeChange={[Function]}
              onLayout={[Function]}
              onMomentumScrollBegin={[Function]}
              onMomentumScrollEnd={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              removeClippedSubviews={false}
              renderItem={[Function]}
              scrollEnabled={false}
              scrollEventThrottle={50}
              stickyHeaderIndices={Array []}
              viewabilityConfigCallbackPairs={Array []}
            >
              <View>
                <View
                  onLayout={[Function]}
                  style={
                    Array [
                      Object {
                        "flexDirection": "row",
                      },
                      null,
                    ]
                  }
                >
                  <View
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    nativeID="animatedComponent"
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                    testID="star0"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "#FF5823",
                            "fontSize": 20,
                          },
                          undefined,
                          Object {
                            "fontFamily": "FontAwesome",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                      testID="font-icon 0"
                    >
                      
                    </Text>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "marginRight": 5,
                        },
                        undefined,
                      ]
                    }
                  />
                </View>
                <View
                  onLayout={[Function]}
                  style={
                    Array [
                      Object {
                        "flexDirection": "row",
                      },
                      null,
                    ]
                  }
                >
                  <View
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    nativeID="animatedComponent"
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                    testID="star1"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "#FF5823",
                            "fontSize": 20,
                          },
                          undefined,
                          Object {
                            "fontFamily": "FontAwesome",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                      testID="font-icon 1"
                    >
                      
                    </Text>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "marginRight": 5,
                        },
                        undefined,
                      ]
                    }
                  />
                </View>
                <View
                  onLayout={[Function]}
                  style={
                    Array [
                      Object {
                        "flexDirection": "row",
                      },
                      null,
                    ]
                  }
                >
                  <View
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    nativeID="animatedComponent"
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                    testID="star2"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "#FF5823",
                            "fontSize": 20,
                          },
                          undefined,
                          Object {
                            "fontFamily": "FontAwesome",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                      testID="font-icon 2"
                    >
                      
                    </Text>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "marginRight": 5,
                        },
                        undefined,
                      ]
                    }
                  />
                </View>
                <View
                  onLayout={[Function]}
                  style={
                    Array [
                      Object {
                        "flexDirection": "row",
                      },
                      null,
                    ]
                  }
                >
                  <View
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    nativeID="animatedComponent"
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                    testID="star3"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "#FF5823",
                            "fontSize": 20,
                          },
                          undefined,
                          Object {
                            "fontFamily": "FontAwesome",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                      testID="font-icon 3"
                    >
                      
                    </Text>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "marginRight": 5,
                        },
                        undefined,
                      ]
                    }
                  />
                </View>
                <View
                  onLayout={[Function]}
                  style={
                    Array [
                      Object {
                        "flexDirection": "row",
                      },
                      null,
                    ]
                  }
                >
                  <View
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    nativeID="animatedComponent"
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                    testID="star4"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "#A5A6B7",
                            "fontSize": 20,
                          },
                          undefined,
                          Object {
                            "fontFamily": "FontAwesome",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                      testID="font-icon 4"
                    >
                      
                    </Text>
                  </View>
                </View>
              </View>
            </RCTScrollView>
          </View>
          <Text
            style={
              Object {
                "fontFamily": "Poppins-Bold",
                "fontSize": 20,
                "marginBottom": 5,
              }
            }
          >
            Owner Response
          </Text>
          <TextInput
            multiline={true}
            onChangeText={[Function]}
            placeholder="Enter Owner response"
            style={
              Object {
                "backgroundColor": "#E2E2E2",
                "marginBottom": 10,
                "padding": 10,
              }
            }
            testID="ownerRespId"
            value="Thanks for submitting your response but we dont value your time nor have interest to give you adequate feedback"
          />
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginTop": 25,
              }
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#E2E2E2",
                  "borderRadius": 5,
                  "minWidth": 115,
                  "opacity": 1,
                  "padding": 14,
                }
              }
              testID="cancel"
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#fff",
                      "fontFamily": "Poppins-Regular",
                      "fontSize": 18,
                    },
                    Object {
                      "color": "#181725",
                    },
                  ]
                }
              >
                Cancel
              </Text>
            </View>
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#FF5823",
                  "borderRadius": 5,
                  "minWidth": 115,
                  "opacity": 1,
                  "padding": 14,
                }
              }
              testID="save"
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#fff",
                      "fontFamily": "Poppins-Regular",
                      "fontSize": 18,
                    },
                    Object {},
                  ]
                }
              >
                Save
              </Text>
            </View>
          </View>
        </View>
      </View>
    </Modal>
  </View>
</RCTScrollView>
`;
